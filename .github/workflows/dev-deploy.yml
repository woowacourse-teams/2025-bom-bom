name: Backend Dev Server CI

on:
  push:
    branches:
      - chore-BOM-85/connect-nginx-to-docker

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: temurin
          cache: gradle

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}

      - name: application.yml 생성 및 검증
        working-directory: ./backend/bom-bom-server
        run: |
          echo "📄 Create application.yml from secret"
          mkdir -p src/main/resources
          echo "${{ secrets.APPLICATION_DEV_PROPERTIES }}" > src/main/resources/application.yml

      - name: Build JAR
        working-directory: ./backend/bom-bom-server
        run: ./gradlew build -x test --no-daemon

      - name: Print JAR path
        run: ls -al ./backend/bom-bom-server/build/libs

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker image (with cache)
        working-directory: ./backend/bom-bom-server
        run: |
          docker buildx create --use --name ci-builder || docker buildx use ci-builder
          docker buildx build \
            --platform linux/amd64 \
            --cache-from=type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/bom-bom:buildcache \
            --cache-to=type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/bom-bom:buildcache,mode=max \
            -t ${{ secrets.DOCKERHUB_USERNAME }}/bom-bom:latest \
            --push .

  deploy:
    name: Deploy via self-hosted runner
    needs: build
    runs-on: [ self-hosted, linux, arm64, main ]

    steps:
      - name: Pull Docker image
        run: |
          IMAGE=${{ secrets.DOCKERHUB_USERNAME }}/bom-bom:latest
          docker pull $IMAGE

      - name: Compare Image Digest and Skip if Unchanged
        id: compare_digest
        run: |
          IMAGE=${{ secrets.DOCKERHUB_USERNAME }}/bom-bom:latest
          NEW=$(docker inspect --format='{{.Id}}' $IMAGE)
          CURRENT=$(docker inspect --format='{{.Image}}' bom-bom || echo "none")
          echo "new_image_id=$NEW" >> $GITHUB_OUTPUT
          echo "current_image_id=$CURRENT" >> $GITHUB_OUTPUT
          if [ "$NEW" = "$CURRENT" ]; then
            echo "Image unchanged. Skipping deployment."
            echo "skip_deploy=true" >> $GITHUB_ENV
          else
            echo "skip_deploy=false" >> $GITHUB_ENV
          fi

      - name: Stop and Remove Existing Container
        if: env.skip_deploy == 'false'
        run: |
          docker stop bom-bom || true
          docker rm bom-bom || true

      - name: Run New Container
        if: env.skip_deploy == 'false'
        run: |
          docker run -d --name bom-bom -p 8080:8080 ${{ secrets.DOCKERHUB_USERNAME }}/bom-bom:latest

name: Backend Dev Server CI

on:
  push:
    branches:
      - chore-BOM-85/connect-nginx-to-docker

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: temurin

      - name: application-dev.yml 파일 만들기
        run: |
          mkdir -p src/main/resources
          echo "${{ secrets.APPLICATION_DEV_PROPERTIES }}" \
          > src/main/resources/application.yml

      - name: Build JAR
        working-directory: ./backend/bom-bom-server
        run: ./gradlew clean build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        working-directory: ./backend/bom-bom-server
        run: |
          docker buildx create --use
          docker buildx build \
          --platform linux/arm64,linux/amd64 \
          -t ${{ secrets.DOCKERHUB_USERNAME }}/bom-bom:latest \
          --push .

  deploy:
    name: Deploy via self-hosted runner
    needs: build
    runs-on: [ self-hosted, linux, arm64, main ]

    steps:
      - name: Pull Docker image
        run: |
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/bom-bom:latest

      - name: Run Docker container
        run: |
          docker stop bom-bom || true
          docker rm bom-bom || true
          docker run -d --name bom-bom \
            -p 8080:8080 \
            ${{ secrets.DOCKERHUB_USERNAME }}/bom-bom:latest

      - name: Check if the port 80 is in use
        run: |
          echo "Checking port 80..."
          PIDS=$(sudo lsof -t -i :80 | paste -sd ',' -)
          if [ -n "$PID" ]; then
            echo "Found process running on port 80: $PID"
            echo "server_running=true" >> $GITHUB_ENV
            echo "PID=$PID" >> $GITHUB_ENV
          else
            echo "server_running=false" >> $GITHUB_ENV
          fi

      - name: Stop server if available (gracefully)
        if: env.server_running == 'true'
        run: |
          echo "Gracefully shutting down process ${{ env.PID }}"
          sudo kill -15 ${{ env.PID }}
          tail --pid=${{ env.PID }} -f /dev/null
